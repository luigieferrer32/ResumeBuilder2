@model ResumeBuilder.Models.UserViewModel
    @{
        ViewBag.Title = "Register";
    }
    <!DOCTYPE html>
    <html>
    <head>
        <meta name="viewport" content="width-device-width"/>
        <h2>Register</h2>
        </head>
    <body>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <h4>User View Model</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "Text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "Control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control", @id = "txtFirstname" } })
                    @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Middlename, htmlAttributes: new { @class = "Control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Middlename, new { htmlAttributes = new { @class = "form-control", @id = "txtMiddlename" } })
                    @Html.ValidationMessageFor(model => model.Middlename, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "Control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control", @id = "txtLastname" } })
                    @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "Control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @id = "txtAddress" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "Control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @id = "txtCity" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Province, htmlAttributes: new { @class = "Control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Province, new { htmlAttributes = new { @class = "form-control", @id = "txtProvince" } })
                    @Html.ValidationMessageFor(model => model.Province, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Zipcode, htmlAttributes: new { @class = "Control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Zipcode, new { htmlAttributes = new { @class = "form-control", @id = "txtZipcode" } })
                    @Html.ValidationMessageFor(model => model.Zipcode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "Control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Gender, (SelectList)ViewBag.Gender, null, new { @class = "form-control", @id = "cboGender" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "Control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control", @id = "txtEmailAddress" } })
                    @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "Control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control", @id = "txtContactNo" } })
                    @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "Control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Birthdate, new { htmlAttributes = new { @class = "form-control", @id = "txtBirthdate", @type = "date" } })
                    @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Register" id="btnRegister" class="btn btn-primary" />

                </div>
            </div>

        </div>

        }
    </body>
</html>
